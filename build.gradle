buildscript {
    repositories {
		maven {
            name 'Shadow'
            url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
        }
        maven {
            name = 'ForgeFS'
            url = 'http://files.minecraftforge.net/maven'
        }
		maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
            name = "jcenter"
            url = "http://jcenter.bintray.com"
        }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
		classpath 'edu.sc.seis.gradle:macappbundle:2.0.0'

    }

}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'shadow'
apply plugin: 'launch4j'

project.ext {
    mainClass = 'net.ftb.gui.LaunchFrame'
    currentYear = '2014'
}

group = 'net.ftb'
version = '1.4.0'
description = "FTB Launcher"
sourceCompatibility = 1.6
targetCompatibility = 1.6
shadow {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
	//classifier = "${System.getenv().BUILD_NUMBER}"
	destinationDir = "${buildDir}/libs/"
	artifactSet {
        include 'com.google.code.gson'
		include 'com.google.guava'
		include 'org.apache.logging.log4j'
		include 'commons-io'
		include 'org.apache.commons'
		include 'commons-codec'

    }
}
task deleteOrig(type: Delete) {
    delete "${project.tasks.jar.getArchivePath().getPath()}"
}

task fixJars(type: Copy) {

    from("${buildDir}/libs/")
	destinationDir = file("${buildDir}/libs/")
        rename { String fileName ->
            fileName.replace('-shadow', '')
        }
		rename(/(.+)-shadow(.+)/, '$1$2')
}
task deleteShadow(type: Delete) {
    delete "${project.tasks.jar.getArchivePath().getPath().replace('.jar', '-shadow.jar')}"

	}
task zipApp(type: Zip) {
    from "${project.buildDir}/macApp/"
    destinationDir = file("${project.buildDir}/libs")
    classifier = 'app'	
}
apply plugin: 'macAppBundle'

assemble.dependsOn.remove(createDmg)
build.dependsOn.remove(createDmg)
build.dependsOn(zipApp)
zipApp.dependsOn(createApp)
createApp.dependsOn(deleteShadow)
deleteShadow.dependsOn(fixJars)
fixJars.dependsOn(deleteOrig)
deleteOrig.dependsOn(shadowJar)

afterEvaluate {
	launch4j {
		icon = file("res/exe/icon.ico").getCanonicalPath()
		jreMinVersion = '1.6.0'
		jar = project.tasks.jar.getArchivePath().getPath()
		outfile = project.tasks.jar.getArchivePath().getPath().replace(".jar", ".exe")
		mainClassName = project.mainClass
	}
}

macAppBundle {
    mainClassName = project.mainClass
    appName = "Feed The Beast"
    icon = "res/app/icon.icns"
    javaProperties.put("apple.laf.useScreenMenuBar", "true")
}

//}
jar {
    manifest {
        attributes 'Main-Class': project.mainClass
    }
}


repositories {
	mavenCentral()
	maven {
			name = 'Mojang libs'
			url = 'https://libraries.minecraft.net/'
		}
}
dependencies {
    compile 'org.swinglabs.swingx:swingx-all:1.6.4'
	compile 'com.google.code.gson:gson:2.2.4'
	compile 'com.mojang:authlib:1.5.5'
    compile 'org.apache.logging.log4j:log4j-api:2.0-beta9'
	compile 'org.apache.logging.log4j:log4j-core:2.0-beta9'
	compile 'org.projectlombok:lombok:1.12.6'
	compile 'com.google.guava:guava:15.0'
	//commons lang3 via authlib
    //commons io via authlib
	}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'res'
        }
    }
}